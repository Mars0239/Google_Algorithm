"""
Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.


"""
class Solution:
    def isIsomorphic(self, s: str, t: str) -> bool:
        #filter out easy case 
        if len(s) != len(t):
            return False 
        s_to_t_mapping = {}  # to store the mapping from s to t
       
        for i in range(len(s)):
            if s[i] in s_to_t_mapping:
                if s_to_t_mapping[s[i]] != t[i]:
                    return False
            else:
                s_to_t_mapping[s[i]] = t[i]
            
            if t[i] in s_to_t_mapping.values():
                return False
            
        
        return True
            

        
        
