"""
1047. Remove All Adjacent Duplicates In String
You are given a string s consisting of lowercase English letters. A duplicate removal consists of choosing two adjacent and equal letters and removing them.

We repeatedly make duplicate removals on s until we no longer can.

Return the final string after all such duplicate removals have been made. It can be proven that the answer is unique.
"""
class Solution:
    def removeDuplicates(self, s: str) -> str:
        if not s:  #checking the edege cases
            return None
        elif s == 1:  #if only one chart it will be no duplicate
            return s 
            
        stack = [] #init a stack
        for char in s: 
            if stack and stack[-1] == char: #check it if it a duplicate with pervious char
                stack.pop() #pop it out from the stack if  it duplicated
            else:
                stack.append(char) #if not, append it in stack
            
        return "".join(stack) #will return ["s"], if ' return stack ' will return ["a", "b","c"], thats not what we want 
