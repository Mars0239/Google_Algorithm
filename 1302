"""
1302. Deepest Leaves Sum
Given the root of a binary tree, return the sum of values of its deepest leaves.
"""
 """
        1
       / \ 
      3   4
     /     \
    5       6
    1. level 1 is 1 level_sum = 1
    2. level 2 is 3+4 = 7  level_sum=7
    3. level 3 is 5 + 6 =11 level_sum=11 
    4. level 4 is None
    """
    def deepestLeavesSum(self, root: Optional[TreeNode]) -> int:
        if root is None: #base case 
            return 0 
        ans = 0 #store anser
        q = deque([root]) #bfs
        while q:
            level_sum = 0 #init level_sum to store curr level sum 
            for _ in range(len(q)): #bfs
                node = q.popleft()
                level_sum += node.val #add node val into
                if node.left: q.append(node.left) 
                if node.right: q.append(node.right)
            ans = level_sum #update 
        return ans 
